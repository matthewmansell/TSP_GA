#BlueJ class context
comment0.target=TSP_FixedStart
comment0.text=\n\ Simple\ GA\ for\ the\ Travelling\ Salesman\ Problem.\n\ View\ the\ optimum/best\ results\ for\ each\ tsp\ in\ the\ README.\n\ View\ the\ notes\ on\ optimal\ configuration\ in\ the\ word\ file.\n\ \n\ Assignment\ task\ completion\:\n\ Task\ 1\:\n\ \ -\ Initialisation\ of\ individuals\:\ see\ initialise().\n\ \ -\ Fitness\ function\:\ see\ evaluate().\n\ \ -\ Mutation\ operator\:\ see\ inversionMutation().\n\ \ -\ Crossover\ operator\:\ see\ cycleCrossover().\n\ \ -\ Selection\ method\:\ see\ tournamentSelect().\n\ \ -\ Evolutionary\ loop\:\ see\ run()\ and\ generatePopulation().\n\ \ -\ Fixed\ city\ start\:\ see\ initialise()\ and\ all\ other\ methods\ prevented\ from\ \n\ \ \ \ altering\ index\ 0.\n\ \ Task\ 2\:\n\ \ -\ Alternate\ mutation\ operator\:\ see\ exchangeMutation().\n\ \ -\ Alternative\ crossover\ operator\:\ see\ partiallyMappedCrossover().\n\ \ -\ Alternative\ selection\ method\:\ see\ rouletteSelect();\n\ \ Task\ 3\:\ see\ included\ word\ document.\n\ \n\ @author\ Matthew\ Mansell\ \n\ @version\ v2.0\n
comment1.params=tsbFile
comment1.target=TSP_FixedStart(java.lang.String)
comment1.text=\n\ @param\ tsbFile\ An\ initial\ tsb\ file\ to\ be\ loaded.\n
comment10.params=
comment10.target=void\ evaluate()
comment10.text=\n\ Calculates\ the\ fitness\ values\ for\ each\ individual.\n
comment11.params=parents
comment11.target=int[][]\ partiallyMappedCrossover(int[])
comment11.text=\n\ Combines\ genetic\ material\ from\ 2\ parent\ individuals\ using\ a\ partial\ map\n\ crossover\ technique.\n\ @param\ parents\ The\ individuals\ to\ crossover\ from.\n\ @return\ The\ 2\ child\ individuals.\n
comment12.params=parents
comment12.target=int[][]\ cycleCrossover(int[])
comment12.text=\n\ Combines\ genetic\ material\ from\ 2\ parent\ individuals\ using\ a\ cycle\ crossover\n\ technique.\n\ @param\ parents\ The\ individuals\ to\ crossover\ from.\n\ @return\ The\ 2\ child\ individuals.\n
comment13.params=parent
comment13.target=int[]\ exchangeMutation(int)
comment13.text=\n\ Mutation\ using\ exchange\ mutation\ techinque.\n\ @param\ parent\ The\ individual\ to\ mutate\ from.\n\ @return\ The\ mutated\ child.\n
comment14.params=parent
comment14.target=int[]\ inversionMutation(int)
comment14.text=\n\ Mutation\ using\ inverison\ technique.\n\ @param\ parent\ The\ individual\ to\ mutate\ from.\n\ @return\ The\ mutated\ child\n
comment15.params=
comment15.target=int\ selectBest()
comment15.text=\n\ @return\ The\ index\ of\ the\ best\ individual.\n
comment16.params=original
comment16.target=int[]\ copy(int[])
comment16.text=\n\ @return\ A\ copy\ of\ the\ array\ entered.\n
comment17.params=
comment17.target=java.lang.String\ generationStats()
comment17.text=\n\ @return\ The\ stats\ of\ the\ current\ population.\n
comment18.params=individual
comment18.target=java.lang.String\ printRoute(int[])
comment18.text=\n\ @return\ Route\ order\n
comment2.params=printEachGen
comment2.target=void\ run(boolean)
comment2.text=\n\ Starts\ the\ execution\ of\ the\ GA\ /\ The\ GA's\ main\ evolutionary\ loop.\n\ @param\ printEachGen\ Set\ true\ if\ you\ want\ to\ see\ generation\ stats.\n
comment3.params=goal
comment3.target=void\ runUntil(int)
comment3.text=\n\ Runs\ the\ GA\ repeatedly\ until\ the\ input\ goal,\ or\ better,\ is\ found.\n\ WARNING\:\ This\ method\ will\ run\ endlesly\ if\ the\ goal\ input\ is\ not\ acheivable.\n\ @param\ goal\ The\ value\ to\ run\ until.\n
comment4.params=runs
comment4.target=void\ runFor(int)
comment4.text=\n\ Runs\ the\ GA\ for\ the\ entered\ number\ of\ runs.\n\ @param\ runs\ The\ number\ of\ times\ of\ which\ to\ run\ the\ GA.\n
comment5.params=filename
comment5.target=void\ load(java.lang.String)
comment5.text=\n\ Loads\ the\ TSP\ file.\ This\ method\ will\ initialise\ the\ variables\ SIZE\ and\ COST.\n\ @param\ filename\ The\ name\ of\ the\ TSB\ file\ to\ be\ loaded.\n
comment6.params=
comment6.target=void\ initialise()
comment6.text=\n\ Initialises\ the\ population,\ with\ a\ fixed\ start\ of\ 0\ (city\ 1).\n
comment7.params=
comment7.target=int[][]\ generatePopulation()
comment7.text=\n\ Generates\ a\ new\ population\ from\ the\ current.\n\ Switch\ cases\ are\ used\ to\ decide\ what\ methods\ to\ use,\ as\ specified\ in\ the\ \n\ constants.\ Switch\ cases\ allow\ for\ easy\ addition\ of\ methods\ in\ the\ future\ if\ \n\ required.\n\ @return\ The\ generated\ population.\n
comment8.params=
comment8.target=int\ tournamentSelect()
comment8.text=\n\ Selection\ method\ using\ a\ tournament\ technique.\n\ @return\ The\ index\ of\ the\ selected\ individual.\n
comment9.params=
comment9.target=int\ rouletteSelect()
comment9.text=\n\ Selection\ method\ using\ a\ roulette\ technique.\n\ Roulette\ selection\ encourages\ maximisation\ and\ so\ is\ incompatible\ with\ TSP.\n\ I\ have\ implemented\ a\ method\ of\ reversing\ the\ values\ so\ that\ a\ greater\ degree\n\ of\ proportionality\ is\ kept,\ and\ encouraging\ minimisation.\n\ @return\ The\ index\ of\ the\ selected\ individual.\n
numComments=19
